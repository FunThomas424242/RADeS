<?xml version="1.0" encoding="UTF-8"?>
<book version="5.0" xmlns="http://docbook.org/ns/docbook"
	xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:svg="http://www.w3.org/2000/svg" xmlns:m="http://www.w3.org/1998/Math/MathML"
	xmlns:html="http://www.w3.org/1999/xhtml" xmlns:db="http://docbook.org/ns/docbook">
	<info>
		<title>RADES Projekt</title>

		<subtitle>Architekturdokumentation</subtitle>

		<releaseinfo>Release Version</releaseinfo>

		<author> 
			<orgname>Free Software Foundation Europe</orgname>
		</author>

		<pubdate>\today</pubdate>
	</info>

	<chapter>
		<title>Einführung und Ziele</title>

		<xi:include href="ziele/Aufgabenstellung.dbk" />
		<xi:include href="ziele/FunktionaleAnforderungen.dbk" />
		<xi:include href="ziele/Qualitaetsziele.dbk" />
		<xi:include href="ziele/Stakeholder.dbk" />

	</chapter>

	<chapter>
		<title>Randbedingungen</title>

		<section>
			<title>Technische Randbedingungen</title>

			<variablelist>
				<varlistentry>
					<term>Programmiersprache</term>

					<listitem>
						<para>Für die Entwicklung wird als Programmiersprache Java
							eingesetzt.
						</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term>Versionsverwaltung</term>

					<listitem>
						<para>Als Versionsverwaltung kommt Git zum Einsatz. Als Hoster
							eignet sich Github. Über Github lassen sich auch die Bugtracking
							und Projekt Homepage realisieren.
						</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term>Build und Deployment</term>

					<listitem>
						<para>Für Build- und Deployment prozesse soll initial mit Maven 3
							gestartet werden. Später soll ein anderes Werkzeug zum Einsatz
							kommen.
						</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term>Continious Integration</term>

					<listitem>
						<para>Für die Realisierung des CI Prozesses soll Jenkins in Form
							eines SaaS zum Einsatz kommen. Als Hoster eignet sich
							CloudBees.
						</para>
					</listitem>
				</varlistentry>
			</variablelist>
		</section>

		<section>
			<title>Organisatorische Randbedingungen</title>

			<section>
				<title>Organisation und Struktur</title>

				<para>RADES soll als Open Source Projekt im Internet entwickelt
					werden. Die Infrastruktur soll generell eine weltweite, verteilte
					Entwicklung ermöglichen. Initial wird das Projekt mit Fokus auf den
					deutschen Sprachraum gestartet. Daher erfolgt die Kommunikation und
					Dokumentation auch in deutscher Sprache. Das Projektinhalt und
					-ziele
					werden vom Initiator vorgegeben.
				</para>

				<para>Sollte eine internationale Community entstehen ist die
					Kommunikation auf englisch umzustellen und bei ausreichend großer
					Community ein Entscheidungsprozess für die Bestimmung zu
					realisierender Feature zu etablieren.
				</para>
			</section>

			<section>
				<title>Resourcen</title>

				<para>Für die Entwicklung des Systems stehen keine finanziellen
					Mittel
					bereit und eine professionelle Finanzierung ala Crowdfunding ist nicht
					angedacht.
				</para>

				<para>Zur Verfügung stehen initial ein Entwickler und die frei im
					Internet verfügbaren Resourcen wie Github, CloudBees, Google etc.
					Über
					Github können Versionsverwaltung, Bugtracking und Webseite realisiert
					werden.
				</para>
			</section>
		</section>



		<section>
			<title>Konventionen</title>

			<variablelist>
				<varlistentry>
					<term>Generierung vs. Kodierung</term>

					<listitem>
						<para>Es wird davon ausgegangen, dass durch RADES nur ein Teil des
							Quellkodes vom Zielprogramm generiert werden kann. Der
							verbleibende Teil muss auf klassischer Weise durch den Entwickler
							händisch kodiert werden. Da ein Reafactoring im Modell über die
							Generierung durchaus erhebliche Änderungen im Kompilat
							hervorrufen
							kann, sind Abhängigkeiten handkodierter Programmteile von
							generierten Programmteilen zu vermeiden.
						</para>

						<para>Aus diesem Grund werden die generierten Programmteile stets
							in separaten Artifakten bereitgestellt. Diese Artifakten dürfen
							Abhängigkeiten zu handkodierten Artifakten besitzen, umgekehrt
							jedoch nicht. Um dem Generator die handkodierten Artifakte
							bekannt
							zu machen sind im Modell geeignete Konstrukte zur Verfügung zu
							stellen.
						</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term>Modellierung Fachlich vs. Technisch</term>

					<listitem>
						<para>Die in RADES zur Spezifikation Verwendung findenden Modelle
							sind eher technischer Natur. RADES erhebt nicht den Anspruch rein
							fachliche Modellierung zu ermöglichen. Es wird angenommen, dass
							eine rein fachliche Modellierung generell nicht möglich ist. Wohl
							aber soll eine fachliche Domän mit technischen Ausdrucksmitteln
							modelliert werden können.
						</para>

						<para />
					</listitem>
				</varlistentry>
			</variablelist>
		</section>
	</chapter>

	<chapter>
		<title>Kontextabgrenzung</title>

		<para />

		<section>
			<title>Fachlicher Kontext</title>

			<para />
		</section>

		<section>
			<title>Verteilungskontext</title>

			<para />
		</section>
	</chapter>

	<chapter>
		<title>Lösungsstrategie</title>

		<para>
		Nachdem in der Vergangheit deutliche Nachteile in der Modellgetriebenen Softwareentwicklung zu Tage traten, soll hier ein anderer Lösungsansatz gewählt werden. 
		Die Nachteile langer Entwicklungspausen während der Buildschritte: Generierung und Serverstart sollen wie folgt gemildert werden:
		<variablelist>
			<varlistentry>
				<term>Generierung</term>

				<listitem>
					<para>Hier sollen Annotationsprozessoren zum Einsatz kommen.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Serverstart</term>

				<listitem>
					<para>Es soll auf OSGi Technologie und Microservices gesetzt werden um nur veränderte Kodeteile neu deployen zu müssen. 
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
		Da die erstellten Anwendungen vorzugsweise als Sammlung diverser Microservices verstanden werden sollen, wird primär eine Entwicklung in den Sprachen
		HTML, JavaScript und Java angedacht. Dabei sollen die Nachteile der nichttypisierten Sprache JavaScript durch Einsatz von Typscript oder Dukescript gemildert werden.
		Weiterhin werden Technologien wie AngularJS und REST Services über JSON Datenaustausch bevorzugt. 
		</para>
	</chapter>

	<chapter>
		<title>Bausteinsicht</title>

		<para />
	</chapter>

	<chapter>
		<title>Laufzeitsicht</title>

		<para />
	</chapter>

	<chapter>
		<title>Verteilungssicht</title>

		<para />
	</chapter>

	<chapter>
		<title>Übergreifende Konzepte</title>

		<para />
	</chapter>

	<chapter>
		<title>ArchitekturEntscheidungen</title>
		
		<xi:include href="entscheidungen/EntwicklungsKonfiguration.dbk" />
	</chapter>
	
	

	<chapter>
		<title>Qualitätsszenarien</title>

		<para />
	</chapter>

	<chapter>
		<title>Risiken</title>

		<para />
	</chapter>

	<chapter>
		<title>Glossar</title>

		<variablelist>
			<varlistentry>
				<term>Domän</term>

				<listitem>
					<para>Fachlich zusammengehöriger Bereich. In einem Firmenportal
						könnten Kundenverwaltung, Angebotsverwaltung und
						Materialverwaltung
						als drei fachliche Domänen verstanden werden.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
	</chapter>


	<bibliography>
		<title>Referenzen</title>

		<bibliomixed>
			<abbrev>DocBook Wikipedia 2012</abbrev>
			<title>Wikipedia
				Artikel zu DocBook http://en.wikipedia.org/wiki/DocBook
			</title>
		</bibliomixed>

		<bibliomixed>
			<abbrev>Apache Maven Wikipedia 2012</abbrev>
			<title>Wikipedia
				Artikel zu Apache Maven http://en.wikipedia.org/wiki/Apache_maven
			</title>
		</bibliomixed>

		<bibliomixed>
			<abbrev>DocBook 5: The Definitive Guide 2012</abbrev>
			<title>HTML-Version (1.0.1) des Buchs von Norman Walsh
				http://www.docbook.org/tdg5/
			</title>
		</bibliomixed>

		<bibliomixed>
			<abbrev>DocBook XSL: The Complete Guide 2007</abbrev>
			<title>DocBook 5 Guide von Bob Stayton
				http://www.sagehill.net/docbookxsl/index.html
			</title>
		</bibliomixed>

		<bibliomixed>
			<abbrev>DocBook XSL Stylesheets: Reference Documentation
			</abbrev>
			<title>Parameter Reference von Norman Walsh
				http://docbook.xml-doc.org/snapshots/xsl/doc/index.html
			</title>
		</bibliomixed>

		<bibliomixed>
			<abbrev>Docbkx-Tool 2012</abbrev>
			<title>DocBook Maven Plugin
				http://docbkx-tools.sourceforge.net/
			</title>
		</bibliomixed>

		<bibliomixed>
			<abbrev>Docbkx User Guide 2012</abbrev>
			<title>Beispielkonfigurationen für das Maven Docbkx Plugin
				http://docbkx-tools.sourceforge.net/docbkx-samples/manual.html
			</title>
		</bibliomixed>

		<bibliomixed>
			<abbrev>FOP Pdf-Images 2010</abbrev>
			<title>Erweiterung für
				Apache FOP um PDF-Images
				http://www.jeremias-maerki.ch/download/fop/pdf-images/
			</title>
		</bibliomixed>

		<bibliomixed>
			<abbrev>POM Reference 2012</abbrev>
			<title>Konfiguration
				einer Maven pom-Datei http://maven.apache.org/pom.html
			</title>
		</bibliomixed>

		<bibliomixed>
			<abbrev>Processing XML with Java 2002</abbrev>
			<title>Beschreibung von Elliotte Rusty Harold wie man XSLT um Java
				erweitert
				http://cafeconleche.org/books/xmljava/chapters/ch17s03.html
			</title>
		</bibliomixed>

		<bibliomixed>
			<abbrev>EXSLT 2006</abbrev>
			<title>Erweiterung von XSLT um
				neue Funktionen http://www.exslt.org/
			</title>
		</bibliomixed>

		<bibliomixed>
			<abbrev>XML Bible 2001</abbrev>
			<title>Fünf Beispielkapitel
				aus der XML Bibel von Elliotte Rusty Harold
				http://www.cafeconleche.org/books/bible2/chapters/
			</title>
		</bibliomixed>

		<bibliomixed>
			<abbrev>DocBook FAQ</abbrev>
			<title>Häufig gestellte Fragen
				zu DocBook http://www.dpawson.co.uk/docbook/
			</title>
		</bibliomixed>

		<bibliomixed>
			<abbrev>XSL FAQ</abbrev>
			<title>Häufig gestellte Fragen zu
				XSL http://www.dpawson.co.uk/xsl/index.html
			</title>
		</bibliomixed>

		<bibliomixed>
			<abbrev>Maven Docbook for beginners 2010</abbrev>
			<title>Quick Start für Docbook mit Maven
				http://www.vineetmanohar.com/2010/02/maven-docbook-for-beginners/
			</title>
		</bibliomixed>

		<bibliomixed>
			<abbrev>XMLmind XML Editor 2012</abbrev>
			<title>Editor für
				Docbook-Dokumente http://www.xmlmind.com/xmleditor/
			</title>
		</bibliomixed>

		<bibliomixed>
			<abbrev>XSL-FO Tutorial 2012</abbrev>
			<title>XSL-FO Tutorial
				mit Anwendungsbeispielen http://www.data2type.de/xml-xslt-xslfo/xsl-fo
			</title>
		</bibliomixed>

		<bibliomixed>
			<abbrev>XSL-FO Tutorial 2007</abbrev>
			<title>XSL-FO Tutorial
				als PDF http://www.ecrion.com/Support/PDF/XSL-FOTutorial.pdf
			</title>
		</bibliomixed>

		<bibliomixed>
			<abbrev>DocBook Wiki 2012</abbrev>
			<title>Wiki von
				NormanWalsh über DocBook http://wiki.docbook.org/Home
			</title>
		</bibliomixed>

		<bibliomixed>
			<abbrev>Using DocBook XSL Stylesheets 2003</abbrev>
			<title>Anleitung für DocBook XSL Stylesheets von Robert Stayton
				http://xml.web.cern.ch/XML/www.sagehill.net/xml/docbookxsl/index.html
			</title>
		</bibliomixed>
	</bibliography>
	
</book>
