<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>


	<groupId>com.github.funthomas424242</groupId>
	<artifactId>rades</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>RADeS - Rapid Application Development System</name>
	<url>https://funthomas424242.github.com/rades</url>

	<description>
		RADeS steht für Rapid Application Development System - also 
		schnelles Anwendungsentwicklungs System.
	
		Basierend auf DSLs (Domän spezifischen Sprachen) soll durch RADeS 
		Programmkode generiert werden (In Form eines Mixes aus Domain Driven Development 
		und Model Driven Development).
		
		RADeS basiert auf der EMEL Architektur, welche auf den 
		folgenden DSLs aufbaut:
		 
		 1. EVM DSL zur Beschreibung der Dialogschicht (Eye Layer).
		 2. MSM DSL zur Beschreibung der Multi Service Schicht (Middle Layer).
		 3. ERM DSL zur Beschreibung der Persistence Schicht (Entity Layer).
		 
	</description>

	<prerequisites>
		<maven>3.0</maven>
	</prerequisites>

	<profiles>
		<profile>
			<id>local</id>
			<activation>
				<property>
					<name>runninglocal</name>
					<value>true</value>
				</property>
			</activation>
			<properties>
				<testonly>true</testonly>
			</properties>
		</profile>
		<profile>
			<!-- the profile is only active if no other profile is active. -->
			<!-- locally allways a profile must be active. -->
			<id>hudson</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<testonly>false</testonly>
			</properties>
		</profile>
	</profiles>

	<properties>
		<!-- general -->
		<user.jdk-version>1.6</user.jdk-version>
		<github.global.userName>${env.gituser}</github.global.userName>
		<github.global.password>${env.gitpassword}</github.global.password>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Arbeitsverzeichnis des Docbkx-Plugins definieren -->
		<workDirectory>${basedir}/target/work/docbkx</workDirectory>

		<!-- Versionen der DocBook-Komponenten -->
		<rades-docbook-style.version>1.0.0-SNAPSHOT</rades-docbook-style.version>
		<docbkx-maven-plugin.version>2.0.13</docbkx-maven-plugin.version>
		<docbook.version>5.0-all</docbook.version>
		<fop-hyph.version>1.2</fop-hyph.version>

		<maven-assembly-plugin.version>2.2.1</maven-assembly-plugin.version>
	</properties>


	<repositories>
		<repository>
			<id>cloudbees-snapshots</id>
			<url>http://repository-funthomas424242.forge.cloudbees.com/snapshot/</url>
		</repository>
		<repository>
			<id>cloudbees-releases</id>
			<url>http://repository-funthomas424242.forge.cloudbees.com/release/</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>mvnrepo</id>
			<url>http://mvnrepository.com/artifact/</url>
		</pluginRepository>
	</pluginRepositories>

	<ciManagement>
		<system>Jenkins</system>
		<url>https://funthomas424242.ci.cloudbees.com/job/RADeS/</url>
	</ciManagement>

	<issueManagement>
		<system>Issue</system>
		<url>https://github.com/funthomas424242/rades/issues</url>
	</issueManagement>

	<distributionManagement>
		<downloadUrl>https://github.com/FunThomas424242/RADeS/downloads</downloadUrl>
		<snapshotRepository>
			<id>cloudbees-snapshots</id>
			<name>Snapshot Repository at CloudBees</name>
			<uniqueVersion>false</uniqueVersion>
			<url>https://repository-funthomas424242.forge.cloudbees.com/snapshot/</url>
		</snapshotRepository>
		<repository>
			<id>cloudbees-releases</id>
			<name>Release Repository at CloudBees</name>
			<uniqueVersion>false</uniqueVersion>
			<url>https://repository-funthomas424242.forge.cloudbees.com/release/</url>
		</repository>
	</distributionManagement>


	<licenses>
		<license>
			<name>GNU LESSER GENERAL PUBLIC LICENSE v2.1</name>
			<url>lgpl-2.1.txt</url>
			<distribution>manual</distribution>
		</license>
	</licenses>

	<scm>
		<url>https://github.com/FunThomas424242/RADeS</url>
		<connection>scm:git:git://github.com/funthomas424242/RADeS.git</connection>
		<developerConnection>scm:git:git@github.com:funthomas424242/RADeS.git</developerConnection>
	</scm>

	<developers>
		<developer>
			<id>tmichel</id>
			<name>FunThomas424242</name>
			<email>funthomas424242@googlemail.com</email>
			<timezone>+1</timezone>
			<organization>The world wide open source community</organization>
			<organizationUrl>https://wiki.fsfe.org/Fellows/FunThomas424242</organizationUrl>
			<roles>
				<role>project admin</role>
				<role>developer</role>
			</roles>
		</developer>
	</developers>

	<dependencies>
		<dependency>
			<groupId>com.github.funthomas424242</groupId>
			<artifactId>rades-docbook-style</artifactId>
			<version>1.0.0-SNAPSHOT</version>
			<type>zip</type>
		</dependency>
	</dependencies>


	<build>
		<plugins>
			<!-- website build -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>attach-artifacts</id>
						<phase>package</phase>
						<goals>
							<goal>attach-artifact</goal>
						</goals>
						<configuration>
							<artifacts>
								<artifact>
									<file>${basedir}/target/docbkx/pdf/architecturedoc.pdf</file>
									<type>pdf</type>
								</artifact>
							</artifacts>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<locales>
						de
					</locales>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>downloads-maven-plugin</artifactId>
				<version>0.6</version>
				<configuration>
					<description>
						Doku in den Formaten PDF, Webhelp und HTML für
						Version
						${project.version} zum Herunterladen.
					</description>
					<override>true</override>
					<includeAttached>true</includeAttached>
					<dryRun>${testonly}</dryRun>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>upload</goal>
						</goals>
						<phase>install</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<version>0.6</version>
				<configuration>
					<message>Building site for ${project.version}</message>
					<dryRun>${testonly}</dryRun>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>site</phase>
					</execution>
				</executions>
			</plugin>

			<!-- docbook build -->
			<plugin>
				<!-- DocBook Styles, Bilder und Assembly ins Arbeitsverzeichnis entpacken -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack-stylesheets</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<includes>styles/**,images/**,assembly/**</includes>
							<artifactItems>
								<artifactItem>
									<groupId>com.github.funthomas424242</groupId>
									<artifactId>rades-docbook-style</artifactId>
									<version>${rades-docbook-style.version}</version>
									<type>zip</type>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${workDirectory}</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.agilejava.docbkx</groupId>
				<artifactId>docbkx-maven-plugin</artifactId>
				<version>${docbkx-maven-plugin.version}</version>
				<dependencies>
					<!-- DocBook-Version festlegen -->
					<dependency>
						<groupId>net.sf.docbook</groupId>
						<artifactId>docbook-xml</artifactId>
						<version>${docbook.version}</version>
						<classifier>resources</classifier>
						<type>zip</type>
						<scope>runtime</scope>
					</dependency>

					<!-- Ermöglicht Silbentrennung -->
					<dependency>
						<groupId>net.sf.offo</groupId>
						<artifactId>fop-hyph</artifactId>
						<version>${fop-hyph.version}</version>
						<scope>runtime</scope>
					</dependency>
				</dependencies>

				<executions>
					<execution>
						<phase>generate-resources</phase>
						<id>generate-outputs</id>
						<goals>
							<!-- PDF und HTML Ausgabe erzeugen -->
							<goal>generate-pdf</goal>
							<goal>generate-html</goal>
							<goal>generate-webhelp</goal>
						</goals>
						<configuration>
							<!-- DocBook-Dokument angeben -->
							<includes>architecturedoc.xml</includes>

							<!-- Kopiert die notwendigen Sourcen -->
							<preProcess>
								<copy todir="${workDirectory}">
									<fileset dir="${basedir}/src/docbkx" />
								</copy>

								<!-- Kopiert Bilder fuer die HTML-Version -->
								<copy todir="${basedir}/target/docbkx/html/images">
									<fileset dir="${workDirectory}/images">
										<exclude name="**/*.pdf" />
									</fileset>
								</copy>
								<!-- Kopiert Bilder fuer die Webhelp-Version. Muss angepasst werden, 
									wenn sich der Name des DocBook-Dokuments ändert. -->
								<copy
									todir="${basedir}/target/docbkx/webhelp/architecturedoc/content/images">
									<fileset dir="${workDirectory}/images">
										<exclude name="**/*.pdf" />
									</fileset>
								</copy>
								<!-- Kopiert CSS-Styles fuer die HTML-Version -->
								<copy todir="${basedir}/target/docbkx/html/styles">
									<fileset dir="${workDirectory}/styles">
										<include name="*.css" />
									</fileset>
								</copy>
							</preProcess>
						</configuration>
					</execution>
				</executions>

				<configuration>
					<!-- Arbeitsverzeichnis festlegen -->
					<sourceDirectory>${workDirectory}</sourceDirectory>

					<!-- Zusaetzliche XSLT Parameter -->
					<customizationParameters>
						<parameter>
							<name>projectversion</name>
							<value>${project.version}</value>
						</parameter>
						<parameter>
							<name>imageicon</name>
							<value>images/dbx/fsfe-logo_bgreen_fellow.png</value>
						</parameter>
					</customizationParameters>

					<!-- Setzt die Dokumentensprache auf Deutsch -->
					<l10nGentextLanguage>de</l10nGentextLanguage>

					<!-- Eigene Sprachdefinitionen fuer Syntax highlighting laden -->
					<highlightXslthlConfig>${workDirectory}/styles/highlighters/xslthl-config.xml</highlightXslthlConfig>

					<!-- Allgemeine Schriftart angeben -->
					<bodyFontFamily>Calibri</bodyFontFamily>

					<!-- Eigene Fonts einbinden -->
					<fonts>
						<font>
							<name>Calibri</name>
							<style>normal</style>
							<weight>normal</weight>
							<embedFile>${workDirectory}/styles/fonts/Calibri/calibri.ttf</embedFile>
							<metricsFile>${workDirectory}/styles/fonts/Calibri/calibri.xml</metricsFile>
						</font>
						<font>
							<name>Calibri</name>
							<style>normal</style>
							<weight>bold</weight>
							<embedFile>${workDirectory}/styles/fonts/Calibri/calibrib.ttf</embedFile>
							<metricsFile>${workDirectory}/styles/fonts/Calibri/calibrib.xml</metricsFile>
						</font>
						<font>
							<name>Calibri</name>
							<style>italic</style>
							<weight>normal</weight>
							<embedFile>${workDirectory}/styles/fonts/Calibri/calibrii.ttf</embedFile>
							<metricsFile>${workDirectory}/styles/fonts/Calibri/calibrii.xml</metricsFile>
						</font>

						<font>
							<name>Courier New</name>
							<style>normal</style>
							<weight>normal</weight>
							<embedFile>${workDirectory}/styles/fonts/Courier/cour.ttf</embedFile>
							<metricsFile>${workDirectory}/styles/fonts/Courier/courier.xml</metricsFile>
						</font>
						<font>
							<name>Courier New</name>
							<style>normal</style>
							<weight>bold</weight>
							<embedFile>${workDirectory}/styles/fonts/Courier/courbd.ttf</embedFile>
							<metricsFile>${workDirectory}/styles/fonts/Courier/courier-bold.xml</metricsFile>
						</font>
						<font>
							<name>Courier New</name>
							<style>italic</style>
							<weight>normal</weight>
							<embedFile>${workDirectory}/styles/fonts/Courier/couri.ttf</embedFile>
							<metricsFile>${workDirectory}/styles/fonts/Courier/courier-italic.xml</metricsFile>
						</font>
					</fonts>

					<!-- Eigene Styles fuer PDF -->
					<foCustomization>${workDirectory}/styles/docbook-pdf.xsl</foCustomization>
					<!-- Eigene Styles fuer HTML -->
					<htmlCustomization>${workDirectory}/styles/docbook-html.xsl</htmlCustomization>

					<!-- Erlaubt Strukturierung einer XML-Datei ueber xi:include href="..." -->
					<xincludeSupported>true</xincludeSupported>
				</configuration>
			</plugin>
			<plugin>
				<!-- Ausgabedateien in einem Zip-Archiv zusammenfassen -->
				<artifactId>maven-assembly-plugin</artifactId>
				<version>${maven-assembly-plugin.version}</version>
				<executions>
					<execution>
						<id>zip documentation</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<finalName>${project.artifactId}-${project.version}</finalName>
					<appendAssemblyId>false</appendAssemblyId>
					<descriptors>
						<descriptor>${workDirectory}/assembly/template-zip.xml</descriptor>
					</descriptors>
				</configuration>
			</plugin>

		</plugins>

	</build>






</project>
